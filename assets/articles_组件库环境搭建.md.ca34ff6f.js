import{_ as e,c as t,o as r,d as o}from"./app.7a11fb1d.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"VS Code 的技术栈、核心组件","slug":"vs-code-的技术栈、核心组件","link":"#vs-code-的技术栈、核心组件","children":[]}],"relativePath":"articles/组件库环境搭建.md"}'),a={name:"articles/组件库环境搭建.md"},s=o('<h3 id="vs-code-的技术栈、核心组件" tabindex="-1">VS Code 的技术栈、核心组件 <a class="header-anchor" href="#vs-code-的技术栈、核心组件" aria-hidden="true">#</a></h3><p>了解 VS Code的技术栈和核心组件，可以让我们对 VS Code 有更深入的认识。此小段，了解即可。</p><ul><li>开发框架：Electron。Electron可以使用 Node.js + JS这样的技术栈开发桌面GUI应用程序。</li><li>编辑器：Monaco Editor。Monaco Editor 是一款开源的在线代码编辑器，是 <strong>VS Code 浏览器版本</strong>的最核心组件。<a href="https://zhuanlan.zhihu.com/p/88828576" target="_blank" rel="noreferrer">#</a></li><li>编程语言：TypeScript。TypeScript 是 JavaScript的严格超集。TS 在JS的基础上添加了许多功能，引入了声明文件，而且支持类型扩展。TS 适合长期的、多人开发的大型项目开发。</li><li>让编辑器支持语言功能：Language Server Protocol （LSP） 语言服务协议。LSP是编辑器/IDE 与语言服务器之间的一种协议，通过 JSON-PRC 传输消息，可以让编辑器嵌入并支持各种编程语言。开发者可以在编辑器中使用各种语言来编写程序。</li><li>让编辑器支持调试功能：Debug Adapter Protocol（DAP）。DAP 是基于 JSON的协议，它抽象了开发工具与调试工具质检的通信。</li><li>集成终端：Xterm.js。VS Code的集成终端是基于开源项目 <a href="https://github.com/xtermjs/xterm.js/" target="_blank" rel="noreferrer">Xterm.js</a> 进行开发的。Xterm.js 是一个使用 TS 开发的终端组件。另外，Xterm.js 并不是直接下来下来就能用的终端应用，它只是一个前端组件，可以与 bash这样的进程进行连接，然后让用户通过 Xterm.js 进行交互。</li></ul>',3),i=[s];function l(c,n,_,d,S,p){return r(),t("div",null,i)}const u=e(a,[["render",l]]);export{m as __pageData,u as default};
